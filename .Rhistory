knitr::opts_chunk$set(message=FALSE)
library(tidyverse)
library(stats)
library(PropCIs)
library(binom)
library(ggnewscale)
games <- read.csv('https://raw.githubusercontent.com/nflverse/nfldata/refs/heads/master/data/games.csv')
games #comment for github
2+2
10+10
get_last5incoming_ypp <- function(season_num,
week_num,
team_name){
prior_games <-all_fastR_team_stats %>%
filter(team == team_name,
(season == season_num & week < week_num) |
(season == season_num - 1 & week >= week_num)) %>%
arrange(season, week)%>%
tail(5)
prior_games <- mutate(prior_games,
plays = attempts + sacks_suffered + carries,
tot_yards = passing_yards + rushing_yards + sack_yards_lost)
if(sum(prior_games$plays)>0){
return(sum(prior_games$tot_yards)/sum(prior_games$plays))
}
}
get_last5incoming_ypp_a <- function(season_num,
week_num,
team_name){
prior_games <-all_fastR_team_stats %>%
filter(team == team_name,
(season == season_num & week < week_num) |
(season == season_num - 1 & week >= week_num)) %>%
arrange(season, week)%>%
tail(5)
prior_games <- mutate(prior_games,
plays = attempts + sacks_suffered + carries,
tot_yards = passing_yards + rushing_yards + sack_yards_lost)
if(sum(prior_games$plays)>0){
return(sum(prior_games$tot_yards)/sum(prior_games$plays))
}
}
get_last10results_matrix <- function(season_num, week_num, game_dataset) {
prior_games <- filter(game_dataset,
(season == season_num & week < week_num) |
(season == season_num - 1 & week >= week_num)) %>%
arrange(season, week)%>%
tail(160)
all_teams <- as.character(sort (c('DET','MIN', 'GB', 'CHI',
'TB','ATL', 'CAR', 'NO',
'HOU','IND', 'JAX', 'TEN',
'BAL', 'PIT', 'CIN', 'CLE',
'KC', 'LAC', 'DEN', 'LV',
'BUF', 'MIA', 'NYJ', 'NE',
'PHI', 'WAS', 'DAL', 'NYG',
'LA', 'SEA', 'ARI', 'SF')))
all_teams <- sort(unique(c(game_dataset$home_team, game_dataset$away_team)))  # Ensuring all teams are included
num_teams <- length(all_teams)
teams_matrix <- matrix(0, nrow = num_teams, ncol = num_teams,
dimnames = list(all_teams, all_teams))
for (i in 1:nrow(prior_games)) {
result <- prior_games$result[i]
home <- prior_games$home_team[i]
away <- prior_games$away_team[i]
if (result > 0) {
teams_matrix[home, away] <- teams_matrix[home, away] + result
} else {
teams_matrix[away, home] <- teams_matrix[away, home] + abs(result)
}
}
return(as.data.frame(teams_matrix))
}
get_last10_pagerank <- function(season_wanted, week_wanted, game_dataset, show_graph = FALSE) {
if (week_wanted == 0) {
all_teams <- sort(unique(c(game_dataset$home_team, game_dataset$away_team)))
pr_matrix <- data.frame(matrix(1/length(all_teams), nrow = 1, ncol = length(all_teams)))
colnames(pr_matrix) <- all_teams
return(pr_matrix)
}
teams_matrix <- get_last10results_matrix(season_wanted, week_wanted, game_dataset)
graph_adj_matrix <- graph_from_adjacency_matrix(t(data.matrix(teams_matrix)), weighted = TRUE)
pr_vector <- page_rank(graph_adj_matrix, algo = "prpack")$vector
pr_matrix <- data.frame(t(pr_vector))
colnames(pr_matrix) <- colnames(teams_matrix)  # Ensure correct team names
return(pr_matrix)
}
knitr::opts_chunk$set(message=FALSE)
library(tidyverse)
library(stats)
library(PropCIs)
library(binom)
library(ggnewscale)
library(plotly)
library(gapminder)
library(nflfastR)
library(Metrics)
library(igraph)
library(dplyr)
games <- read.csv('https://raw.githubusercontent.com/nflverse/nfldata/refs/heads/master/data/games.csv')
games <- filter(games,season > 2002) #errors in NFLfastR end in 2002 (it seems)
#current team names (how NFLfastR does it...)
games$away_team[games$away_team=='STL'] <- 'LA'
games$away_team[games$away_team=='SD'] <- 'LAC'
games$away_team[games$away_team=='OAK'] <- 'LV'
games$home_team[games$home_team=='STL'] <- 'LA'
games$home_team[games$home_team=='SD'] <- 'LAC'
games$home_team[games$home_team=='OAK'] <- 'LV'
games
games<- games %>% mutate(winner_ha = case_when(result>0 ~ 'home',
result<0 ~ 'away',
TRUE ~ 'tie')) %>%
mutate(winner_team = case_when(result>0 ~ home_team,
result<0 ~ away_team,
TRUE ~ 'tie')) %>%
mutate(loser_team = case_when(result<0 ~ home_team,
result>0 ~ away_team,
TRUE ~ 'tie'))
home_incoming_wins <- c(0)
home_incoming_losses <- c(0)
away_incoming_wins <- c(0)
away_incoming_losses <- c(0)
home_incoming_ties <- c(0)
away_incoming_ties <- c(0)
home_incoming_points_scored <- c(0)
home_incoming_points_allowed <- c(0)
away_incoming_points_scored <- c(0)
away_incoming_points_allowed <- c(0)
for (i in 2:nrow(games)) {
home_incoming_wins[i] <- nrow(filter(games[1:(i-1),],winner_team==games[i,]$home_team,
season==games[i,]$season))
home_incoming_losses[i] <- nrow(filter(games[1:(i-1),],loser_team==games[i,]$home_team,
season==games[i,]$season))
away_incoming_wins[i] <- nrow(filter(games[1:(i-1),],winner_team==games[i,]$away_team,
season==games[i,]$season))
away_incoming_losses[i] <- nrow(filter(games[1:(i-1),],loser_team==games[i,]$away_team,
season==games[i,]$season))
home_incoming_ties[i] <- nrow(filter(games[1:(i-1),],winner_team=='tie',home_team==games[i,]$home_team,
season==games[i,]$season)) +
nrow(filter(games[1:(i-1),],winner_team=='tie',away_team==games[i,]$home_team,
season==games[i,]$season))
away_incoming_ties[i] <- nrow(filter(games[1:(i-1),],winner_team=='tie',home_team==games[i,]$away_team,
season==games[i,]$season)) +
nrow(filter(games[1:(i-1),],winner_team=='tie',away_team==games[i,]$away_team,
season==games[i,]$season))
home_incoming_points_scored[i] <- sum(filter(games[1:(i-1),],
season==games[i,]$season,
home_team==games[i,]$home_team)$home_score) +
sum(filter(games[1:(i-1),],
season==games[i,]$season,
away_team==games[i,]$home_team)$away_score)
away_incoming_points_scored[i] <- sum(filter(games[1:(i-1),],
season==games[i,]$season,
home_team==games[i,]$away_team)$home_score) +
sum(filter(games[1:(i-1),],
season==games[i,]$season,
away_team==games[i,]$away_team)$away_score)
home_incoming_points_allowed[i] <- sum(filter(games[1:(i-1),],
season==games[i,]$season,
home_team==games[i,]$home_team)$away_score) +
sum(filter(games[1:(i-1),],
season==games[i,]$season,
away_team==games[i,]$home_team)$home_score)
away_incoming_points_allowed[i] <- sum(filter(games[1:(i-1),],
season==games[i,]$season,
home_team==games[i,]$away_team)$away_score) +
sum(filter(games[1:(i-1),],
season==games[i,]$season,
away_team==games[i,]$away_team)$home_score)
}
#adding more variables
games <- games %>%
mutate(rest_diff = home_rest - away_rest) %>%
mutate(home_incoming_games = home_incoming_wins+home_incoming_losses+home_incoming_ties,
away_incoming_games = away_incoming_wins+away_incoming_losses+away_incoming_ties) %>%
mutate(home_incoming_win_perc = ifelse(home_incoming_games==0, 0, home_incoming_wins / home_incoming_games),
away_incoming_win_perc = ifelse(away_incoming_games==0, 0, away_incoming_wins / away_incoming_games)) %>%
mutate(win_perc_diff = home_incoming_win_perc-away_incoming_win_perc) %>%
mutate(winner_01 = winner_ha=='home') %>%
mutate(home_incoming_point_diff = home_incoming_points_scored - home_incoming_points_allowed,
away_incoming_point_diff = away_incoming_points_scored - away_incoming_points_allowed) %>%
mutate(point_diff_diff = home_incoming_point_diff - away_incoming_point_diff) %>%
mutate(wins_diff = home_incoming_wins - away_incoming_wins) %>%
mutate(home_moneyline_prob = ifelse(home_moneyline>0,100/(home_moneyline+100),abs(home_moneyline)/(abs(home_moneyline)+100))) %>%
mutate(away_moneyline_prob = ifelse(away_moneyline>0,100/(away_moneyline+100),abs(away_moneyline)/(abs(away_moneyline)+100))) %>%
mutate(home_moneyline_prob_a = 1-away_moneyline_prob) %>%
mutate(mean_moneyline_prob = (home_moneyline_prob+home_moneyline_prob_a)/2)
#yards per play
get_incoming_ypp <- function(season_num,
week_num,
team_name){
prior_games <- all_fastR_team_stats %>% filter(team==team_name,season==season_num,week<week_num)
prior_games <- mutate(prior_games,
plays = attempts + sacks_suffered + carries,
tot_yards = passing_yards + rushing_yards + sack_yards_lost)
if(sum(prior_games$plays)>0){
return(sum(prior_games$tot_yards)/sum(prior_games$plays))
}
return(5)
}
get_incoming_ypp_a <- function(season_num,
week_num,
team_name){
prior_games <- all_fastR_team_stats %>% filter(opponent_team==team_name,season==season_num,week<week_num)
prior_games <- mutate(prior_games,
plays = attempts + sacks_suffered + carries,
tot_yards = passing_yards + rushing_yards + sack_yards_lost)
if(sum(prior_games$plays)>0){
return(sum(prior_games$tot_yards)/sum(prior_games$plays))
}
return(5)
}
home_ypp <- c()
home_ypp_a <- c()
away_ypp <- c()
away_ypp_a <- c()
for (i in 1:nrow(games)) {
home_ypp[i] <- get_incoming_ypp(games[i,]$season,
games[i,]$week,
games[i,]$home_team)
home_ypp_a[i] <- get_incoming_ypp_a(games[i,]$season,
games[i,]$week,
games[i,]$home_team)
away_ypp[i] <- get_incoming_ypp(games[i,]$season,
games[i,]$week,
games[i,]$away_team)
away_ypp_a[i] <- get_incoming_ypp_a(games[i,]$season,
games[i,]$week,
games[i,]$away_team)
}
#takes a few minutes to run
all_fastR_team_stats <- calculate_stats(
seasons = TRUE,
summary_level = 'week',
stat_type = 'team',
season_type = "REG+POST"
)
#yards per play
get_incoming_ypp <- function(season_num,
week_num,
team_name){
prior_games <- all_fastR_team_stats %>% filter(team==team_name,season==season_num,week<week_num)
prior_games <- mutate(prior_games,
plays = attempts + sacks_suffered + carries,
tot_yards = passing_yards + rushing_yards + sack_yards_lost)
if(sum(prior_games$plays)>0){
return(sum(prior_games$tot_yards)/sum(prior_games$plays))
}
return(5)
}
get_incoming_ypp_a <- function(season_num,
week_num,
team_name){
prior_games <- all_fastR_team_stats %>% filter(opponent_team==team_name,season==season_num,week<week_num)
prior_games <- mutate(prior_games,
plays = attempts + sacks_suffered + carries,
tot_yards = passing_yards + rushing_yards + sack_yards_lost)
if(sum(prior_games$plays)>0){
return(sum(prior_games$tot_yards)/sum(prior_games$plays))
}
return(5)
}
home_ypp <- c()
home_ypp_a <- c()
away_ypp <- c()
away_ypp_a <- c()
for (i in 1:nrow(games)) {
home_ypp[i] <- get_incoming_ypp(games[i,]$season,
games[i,]$week,
games[i,]$home_team)
home_ypp_a[i] <- get_incoming_ypp_a(games[i,]$season,
games[i,]$week,
games[i,]$home_team)
away_ypp[i] <- get_incoming_ypp(games[i,]$season,
games[i,]$week,
games[i,]$away_team)
away_ypp_a[i] <- get_incoming_ypp_a(games[i,]$season,
games[i,]$week,
games[i,]$away_team)
}
games$home_incoming_ypp <- home_ypp
knitr::opts_chunk$set(message=FALSE)
library(tidyverse)
library(stats)
library(PropCIs)
library(binom)
library(ggnewscale)
library(plotly)
library(gapminder)
library(nflfastR)
library(Metrics)
library(igraph)
library(dplyr)
games <- read.csv('https://raw.githubusercontent.com/nflverse/nfldata/refs/heads/master/data/games.csv')
games <- filter(games,season > 2002) #errors in NFLfastR end in 2002 (it seems)
#current team names (how NFLfastR does it...)
games$away_team[games$away_team=='STL'] <- 'LA'
games$away_team[games$away_team=='SD'] <- 'LAC'
games$away_team[games$away_team=='OAK'] <- 'LV'
games$home_team[games$home_team=='STL'] <- 'LA'
games$home_team[games$home_team=='SD'] <- 'LAC'
games$home_team[games$home_team=='OAK'] <- 'LV'
games
games<- games %>% mutate(winner_ha = case_when(result>0 ~ 'home',
result<0 ~ 'away',
TRUE ~ 'tie')) %>%
mutate(winner_team = case_when(result>0 ~ home_team,
result<0 ~ away_team,
TRUE ~ 'tie')) %>%
mutate(loser_team = case_when(result<0 ~ home_team,
result>0 ~ away_team,
TRUE ~ 'tie'))
home_incoming_wins <- c(0)
home_incoming_losses <- c(0)
away_incoming_wins <- c(0)
away_incoming_losses <- c(0)
home_incoming_ties <- c(0)
away_incoming_ties <- c(0)
home_incoming_points_scored <- c(0)
home_incoming_points_allowed <- c(0)
away_incoming_points_scored <- c(0)
away_incoming_points_allowed <- c(0)
for (i in 2:nrow(games)) {
home_incoming_wins[i] <- nrow(filter(games[1:(i-1),],winner_team==games[i,]$home_team,
season==games[i,]$season))
home_incoming_losses[i] <- nrow(filter(games[1:(i-1),],loser_team==games[i,]$home_team,
season==games[i,]$season))
away_incoming_wins[i] <- nrow(filter(games[1:(i-1),],winner_team==games[i,]$away_team,
season==games[i,]$season))
away_incoming_losses[i] <- nrow(filter(games[1:(i-1),],loser_team==games[i,]$away_team,
season==games[i,]$season))
home_incoming_ties[i] <- nrow(filter(games[1:(i-1),],winner_team=='tie',home_team==games[i,]$home_team,
season==games[i,]$season)) +
nrow(filter(games[1:(i-1),],winner_team=='tie',away_team==games[i,]$home_team,
season==games[i,]$season))
away_incoming_ties[i] <- nrow(filter(games[1:(i-1),],winner_team=='tie',home_team==games[i,]$away_team,
season==games[i,]$season)) +
nrow(filter(games[1:(i-1),],winner_team=='tie',away_team==games[i,]$away_team,
season==games[i,]$season))
home_incoming_points_scored[i] <- sum(filter(games[1:(i-1),],
season==games[i,]$season,
home_team==games[i,]$home_team)$home_score) +
sum(filter(games[1:(i-1),],
season==games[i,]$season,
away_team==games[i,]$home_team)$away_score)
away_incoming_points_scored[i] <- sum(filter(games[1:(i-1),],
season==games[i,]$season,
home_team==games[i,]$away_team)$home_score) +
sum(filter(games[1:(i-1),],
season==games[i,]$season,
away_team==games[i,]$away_team)$away_score)
home_incoming_points_allowed[i] <- sum(filter(games[1:(i-1),],
season==games[i,]$season,
home_team==games[i,]$home_team)$away_score) +
sum(filter(games[1:(i-1),],
season==games[i,]$season,
away_team==games[i,]$home_team)$home_score)
away_incoming_points_allowed[i] <- sum(filter(games[1:(i-1),],
season==games[i,]$season,
home_team==games[i,]$away_team)$away_score) +
sum(filter(games[1:(i-1),],
season==games[i,]$season,
away_team==games[i,]$away_team)$home_score)
}
#adding more variables
games <- games %>%
mutate(rest_diff = home_rest - away_rest) %>%
mutate(home_incoming_games = home_incoming_wins+home_incoming_losses+home_incoming_ties,
away_incoming_games = away_incoming_wins+away_incoming_losses+away_incoming_ties) %>%
mutate(home_incoming_win_perc = ifelse(home_incoming_games==0, 0, home_incoming_wins / home_incoming_games),
away_incoming_win_perc = ifelse(away_incoming_games==0, 0, away_incoming_wins / away_incoming_games)) %>%
mutate(win_perc_diff = home_incoming_win_perc-away_incoming_win_perc) %>%
mutate(winner_01 = winner_ha=='home') %>%
mutate(home_incoming_point_diff = home_incoming_points_scored - home_incoming_points_allowed,
away_incoming_point_diff = away_incoming_points_scored - away_incoming_points_allowed) %>%
mutate(point_diff_diff = home_incoming_point_diff - away_incoming_point_diff) %>%
mutate(wins_diff = home_incoming_wins - away_incoming_wins) %>%
mutate(home_moneyline_prob = ifelse(home_moneyline>0,100/(home_moneyline+100),abs(home_moneyline)/(abs(home_moneyline)+100))) %>%
mutate(away_moneyline_prob = ifelse(away_moneyline>0,100/(away_moneyline+100),abs(away_moneyline)/(abs(away_moneyline)+100))) %>%
mutate(home_moneyline_prob_a = 1-away_moneyline_prob) %>%
mutate(mean_moneyline_prob = (home_moneyline_prob+home_moneyline_prob_a)/2)
#adding more variables
games <- games %>%
mutate(rest_diff = home_rest - away_rest) %>%
mutate(home_incoming_games = home_incoming_wins+home_incoming_losses+home_incoming_ties,
away_incoming_games = away_incoming_wins+away_incoming_losses+away_incoming_ties) %>%
mutate(home_incoming_win_perc = ifelse(home_incoming_games==0, 0, home_incoming_wins / home_incoming_games),
away_incoming_win_perc = ifelse(away_incoming_games==0, 0, away_incoming_wins / away_incoming_games)) %>%
mutate(win_perc_diff = home_incoming_win_perc-away_incoming_win_perc) %>%
mutate(winner_01 = winner_ha=='home') %>%
mutate(home_incoming_point_diff = home_incoming_points_scored - home_incoming_points_allowed,
away_incoming_point_diff = away_incoming_points_scored - away_incoming_points_allowed) %>%
mutate(point_diff_diff = home_incoming_point_diff - away_incoming_point_diff) %>%
mutate(wins_diff = home_incoming_wins - away_incoming_wins) %>%
mutate(home_moneyline_prob = ifelse(home_moneyline>0,100/(home_moneyline+100),abs(home_moneyline)/(abs(home_moneyline)+100))) %>%
mutate(away_moneyline_prob = ifelse(away_moneyline>0,100/(away_moneyline+100),abs(away_moneyline)/(abs(away_moneyline)+100))) %>%
mutate(home_moneyline_prob_a = 1-away_moneyline_prob) %>%
mutate(mean_moneyline_prob = (home_moneyline_prob+home_moneyline_prob_a)/2)
no_ties <- filter(games,winner_ha != 'tie')
wd_sum <- games %>%
group_by(winner_ha,wins_diff) %>%
summarize(count = n()) %>%
mutate(prop = count/sum(count))
knitr::opts_chunk$set(message=FALSE)
library(tidyverse)
library(stats)
library(PropCIs)
library(binom)
library(ggnewscale)
library(plotly)
library(gapminder)
library(nflfastR)
library(Metrics)
library(igraph)
library(dplyr)
games <- read.csv('https://raw.githubusercontent.com/nflverse/nfldata/refs/heads/master/data/games.csv')
games <- filter(games,season > 2002) #errors in NFLfastR end in 2002 (it seems)
#current team names (how NFLfastR does it...)
games$away_team[games$away_team=='STL'] <- 'LA'
games$away_team[games$away_team=='SD'] <- 'LAC'
games$away_team[games$away_team=='OAK'] <- 'LV'
games$home_team[games$home_team=='STL'] <- 'LA'
games$home_team[games$home_team=='SD'] <- 'LAC'
games$home_team[games$home_team=='OAK'] <- 'LV'
games
games<- games %>% mutate(winner_ha = case_when(result>0 ~ 'home',
result<0 ~ 'away',
TRUE ~ 'tie')) %>%
mutate(winner_team = case_when(result>0 ~ home_team,
result<0 ~ away_team,
TRUE ~ 'tie')) %>%
mutate(loser_team = case_when(result<0 ~ home_team,
result>0 ~ away_team,
TRUE ~ 'tie'))
home_incoming_wins <- c(0)
home_incoming_losses <- c(0)
away_incoming_wins <- c(0)
away_incoming_losses <- c(0)
home_incoming_ties <- c(0)
away_incoming_ties <- c(0)
home_incoming_points_scored <- c(0)
home_incoming_points_allowed <- c(0)
away_incoming_points_scored <- c(0)
away_incoming_points_allowed <- c(0)
for (i in 2:nrow(games)) {
home_incoming_wins[i] <- nrow(filter(games[1:(i-1),],winner_team==games[i,]$home_team,
season==games[i,]$season))
home_incoming_losses[i] <- nrow(filter(games[1:(i-1),],loser_team==games[i,]$home_team,
season==games[i,]$season))
away_incoming_wins[i] <- nrow(filter(games[1:(i-1),],winner_team==games[i,]$away_team,
season==games[i,]$season))
away_incoming_losses[i] <- nrow(filter(games[1:(i-1),],loser_team==games[i,]$away_team,
season==games[i,]$season))
home_incoming_ties[i] <- nrow(filter(games[1:(i-1),],winner_team=='tie',home_team==games[i,]$home_team,
season==games[i,]$season)) +
nrow(filter(games[1:(i-1),],winner_team=='tie',away_team==games[i,]$home_team,
season==games[i,]$season))
away_incoming_ties[i] <- nrow(filter(games[1:(i-1),],winner_team=='tie',home_team==games[i,]$away_team,
season==games[i,]$season)) +
nrow(filter(games[1:(i-1),],winner_team=='tie',away_team==games[i,]$away_team,
season==games[i,]$season))
home_incoming_points_scored[i] <- sum(filter(games[1:(i-1),],
season==games[i,]$season,
home_team==games[i,]$home_team)$home_score) +
sum(filter(games[1:(i-1),],
season==games[i,]$season,
away_team==games[i,]$home_team)$away_score)
away_incoming_points_scored[i] <- sum(filter(games[1:(i-1),],
season==games[i,]$season,
home_team==games[i,]$away_team)$home_score) +
sum(filter(games[1:(i-1),],
season==games[i,]$season,
away_team==games[i,]$away_team)$away_score)
home_incoming_points_allowed[i] <- sum(filter(games[1:(i-1),],
season==games[i,]$season,
home_team==games[i,]$home_team)$away_score) +
sum(filter(games[1:(i-1),],
season==games[i,]$season,
away_team==games[i,]$home_team)$home_score)
away_incoming_points_allowed[i] <- sum(filter(games[1:(i-1),],
season==games[i,]$season,
home_team==games[i,]$away_team)$away_score) +
sum(filter(games[1:(i-1),],
season==games[i,]$season,
away_team==games[i,]$away_team)$home_score)
}
load("C:/Users/flags/OneDrive/Documents/GitHub/Sam_Sp25/.RData")
load("C:/Users/flags/OneDrive/Documents/GitHub/Sam_Sp25/.RData")
